// <auto-generated />
using ECommercePrototype.Api.Catalogue.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ECommercePrototype.Api.Catalogue.Migrations
{
    [DbContext(typeof(CatalogueDBContext))]
    [Migration("20181221145607_ECommercePrototype.Api.Catalogue.Models.CatalogueDBContext")]
    partial class ECommercePrototypeApiCatalogueModelsCatalogueDBContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ECommercePrototype.Api.Catalogue.Models.CatalogueItem", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemAvailabkeStock");

                    b.Property<string>("ItemBrand");

                    b.Property<string>("ItemDescription");

                    b.Property<string>("ItemName");

                    b.Property<float>("ItemPrice");

                    b.Property<string>("ItemType");

                    b.HasKey("ItemID");

                    b.ToTable("Catalogue");
                });
#pragma warning restore 612, 618
        }
    }
}
